<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/letech/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- JSON View -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" >
		<beans:property name="contentType" value="application/json;charset=UTF-8" />
	</beans:bean>
	
	<!-- BeanNameViewResolver -->
	<beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" >
		<beans:property name="order">
			<beans:value>0</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- Exception Resolver -->
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="java.io.FileNotFoundException">letech/error/exception</beans:prop>
				<beans:prop key="java.lang.NullPointerException">letech/error/null</beans:prop>
				<beans:prop key="java.sql.SQLException">letech/error/sql</beans:prop>
				<beans:prop key="java.sql.SQLSyntaxErrorException">letech/error/sql</beans:prop>
				<beans:prop key="org.springframework.jdbc.BadSqlGrammarException">letech/error/sql</beans:prop>
				<beans:prop key="java.lang.Exception">letech/error/exception</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- Transaction -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<context:component-scan base-package="kr.letech" />
	
</beans:beans>
