<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="appBbs">

	<select id="getSelectAppBbsPageInfo" resultType="egovframework.rte.psl.dataaccess.util.EgovMap" parameterType="map" >
		SELECT
		    A.SEQ
		    , A.BBS_ID
		    , A.TITLE
		    , TO_CHAR(A.REG_DT, 'YYYY-MM-DD') AS REG_DT
		FROM
		    STD_BBS A
		WHERE
		    A.BBS_ID = #{bbsId}
		ORDER BY A.REG_DT DESC
	</select>
	
	<resultMap id="getAppBbsView" type="egovframework.rte.psl.dataaccess.util.EgovMap">
	    <result property="seq"		column="SEQ"		javaType="java.lang.Integer"	jdbcType="INTEGER" />
	    <result property="bbsId"	column="BBS_ID"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="title"	column="TITLE"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="content"	column="CONTENT"	javaType="java.lang.String"		jdbcType="CLOB" />
	    <result property="hit"		column="HIT"		javaType="java.lang.Integer"	jdbcType="INTEGER" />
	    <result property="regDt"	column="REG_DT"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="regNm"	column="REG_NM"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	</resultMap>
	<select id="getSelectAppBbsView" resultMap="getAppBbsView" parameterType="map" >
		SELECT
		    A.SEQ
		    , A.BBS_ID
		    , A.TITLE
		    , A.CONTENT
		    , A.HIT
		    , TO_CHAR(A.REG_DT, 'YYYY-MM-DD') AS REG_DT
		    , A.REG_NM
		FROM
		    STD_BBS A
		WHERE
		    A.SEQ = #{seq}
	</select>
	
	
	
		<!-- 결재정보 목록조회 -->
	<select id="getSelectAppPaymentPageInfo" resultType="egovframework.rte.psl.dataaccess.util.EgovMap" parameterType="map" >
		WITH VW_APRV_LINE AS (
			/* 진행 상태 정보 가져오기 */
		  SELECT
		    APRV_NO
		    , CASE
		        WHEN TOT_CNT = APRV_YN_0 THEN '대기'
		        WHEN TOT_CNT = APRV_YN_1 THEN '완료'
		        WHEN APRV_YN_2 > 0 THEN '보류'
		        WHEN APRV_YN_3 > 0 THEN '반려'
		        ELSE '진행중'
		      END APRV_YN_NM
		    , CASE
		        WHEN TOT_CNT = APRV_YN_0 THEN '1'
		        WHEN TOT_CNT = APRV_YN_1 THEN '2'
		        WHEN APRV_YN_2 > 0 THEN '3'
		        WHEN APRV_YN_3 > 0 THEN '4'
		        ELSE '9'
		      END APRV_YN_TP
			, APRV_YN_1 AS APRV_YN_END_NO
		    , CASE
		        WHEN TOT_CNT = APRV_YN_0 THEN '1'
		        WHEN TOT_CNT = APRV_YN_1 THEN '0'
		        WHEN APRV_YN_2 > 0 THEN '1'
		        WHEN APRV_YN_3 > 0 THEN '1'
		        ELSE '1'
		      END SORT_ORDR
		  FROM (
		    SELECT 
		      A.APRV_NO
		      , SUM(TOT_CNT) As TOT_CNT
		      , SUM(APRV_YN_0) AS APRV_YN_0		/* 대기 */
		      , SUM(APRV_YN_1) AS APRV_YN_1		/* 완료 */
		      , SUM(APRV_YN_2) AS APRV_YN_2		/* 보류 */
		      , SUM(APRV_YN_3) AS APRV_YN_3		/* 반려 */
		    FROM (
              SELECT 
                APRV_NO
                , COUNT(1) AS TOT_CNT
                , CASE
                    WHEN APRV_YN_CD = 0 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_0        /* 대기 */
                , CASE
                    WHEN APRV_YN_CD = 1 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_1        /* 완료 */
                , CASE
                    WHEN APRV_YN_CD = 2 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_2        /* 보류 */
                , CASE
                    WHEN APRV_YN_CD = 3 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_3        /* 반려 */
              FROM STD_APRV_LINE 
              WHERE NVL(REFE_YN, 'N') = 'N'
              GROUP BY APRV_NO, APRV_YN_CD ,NVL(REFE_YN, 'N')
		    ) A
		    GROUP BY A.APRV_NO
		  )
		)
		, VW_STD_LINE AS (
		  SELECT
		    APRV_NO, APRV_YN_CD, APRV_ORDR, CONF_YN, REFE_YN
		  FROM STD_APRV_LINE
		  WHERE APRV_EMP_NO = #{uss_id}
		)
		, VW_STD_CONF AS (
			SELECT C.APRV_NO, C.CONF_YN
	          FROM STD_APRV_LINE C
	         WHERE (C.APRV_NO || '_' || C.APRV_ORDR) IN (  SELECT    B.APRV_NO
	                                                              || '_'
	                                                              || MAX (B.APRV_ORDR)
	                                                         FROM STD_APRV_MNG A,
	                                                              STD_APRV_LINE B
	                                                        WHERE     A.REPT_APRV_NO =
	                                                                     #{uss_id}
	                                                              AND A.APRV_NO = B.APRV_NO
	                                                     GROUP BY B.APRV_NO)
	        UNION
			SELECT B.APRV_NO, B.CONF_YN
				FROM STD_APRV_LINE B
			WHERE B.APRV_EMP_NO = #{uss_id}
		)
		, VW_STD_CONF_Y AS (
		    SELECT
		      C.APRV_NO
		      , SUM(C.CONF_Y_CNT) AS CONF_Y_CNT
              , SUM(C.CONF_Y_CNT) AS CONF_REFE_CNT
		    FROM (
		          SELECT 
		            B.APRV_NO
		            , CASE
		                WHEN B.CONF_YN = 'Y' THEN COUNT(1)
		                ELSE 0
		             END CONF_Y_CNT
                    , CASE
                        WHEN B.CONF_YN = 'Y' AND NVL(B.REFE_YN, 'N') = 'Y' THEN COUNT(1)
                        ELSE 0
                     END CONF_REFE_CONT
		          FROM STD_APRV_MNG A
		              , STD_APRV_LINE B
		          WHERE (A.REPT_APRV_NO = #{uss_id} OR B.APRV_EMP_NO = #{uss_id})
		            AND A.APRV_NO = B.APRV_NO
		          GROUP BY B.APRV_NO, B.CONF_YN, NVL(B.REFE_YN, 'N')
		        ) C
		    GROUP BY C.APRV_NO
		)
		SELECT A.APRV_NO					/* 결재번호 */
		     , A.REPT_APRV_NO			/* 보고자사원번호(임시로 회원ID사용) */
		     , B.USS_NM AS REPT_APRV_NM
		     , A.TITLE							/* 제목 */
		     , A.PROJ_CD						/* 프로젝트코드 */
		     , A.TERM_ST_YM				/* 기간시작일자 */
		     , A.TERM_ED_YM				/* 기간종료일자 */
		     , C.CD_NM AS APRV_TYPE_NM
		     , NVL(E.APRV_YN_NM, '대기') AS APRV_YN_NM
		     , TO_CHAR(A.CRTN_DT, 'YYYY-MM-DD') AS CRTN_DT
		     , DECODE(F.APRV_NO, null, 'N', 'Y') AS LINE_CHK
		     , F.APRV_YN_CD AS LINE_APRV_YN_CD
		     , E.APRV_YN_END_NO
		     , F.APRV_ORDR
		     , E.APRV_YN_TP
			 , CASE 
			     WHEN F.CONF_YN IS NULL THEN G.CONF_YN
			     ELSE F.CONF_YN
			  END CONF_YN
			 , H.CONF_Y_CNT
			 , NVL(F.REFE_YN, 'N') AS REFE_YN
			 , H.CONF_REFE_CNT
		 FROM STD_APRV_MNG A
		    LEFT OUTER JOIN STD_USS_MNG B ON B.USS_ID = A.REPT_APRV_NO
		    LEFT OUTER JOIN STD_CD_MNG C ON C.UP_CD = 'CD0001' AND C.CD = A.APRV_TYPE_CD
		    LEFT OUTER JOIN VW_APRV_LINE E ON E.APRV_NO = A.APRV_NO
		    LEFT OUTER JOIN VW_STD_LINE F ON F.APRV_NO = A.APRV_NO
			LEFT OUTER JOIN VW_STD_CONF G ON G.APRV_NO = A.APRV_NO
			LEFT OUTER JOIN VW_STD_CONF_Y H ON H.APRV_NO = A.APRV_NO
		WHERE 1=1
			AND ( A.REPT_APRV_NO = #{uss_id}
					OR A.APRV_NO IN (SELECT APRV_NO FROM STD_APRV_LINE WHERE APRV_EMP_NO = #{uss_id}) )		/* 만약 결재자 일경우에 결재가 완료된 정보를 안보여줄경우  */
		<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
			<choose>
				<when test='searchGubun == "01"' >
			AND A.TITLE LIKE '%' || #{searchField} || '%'
				</when>
				<when test='searchGubun == "02"' >
			AND REPT_CONT LIKE '%' || #{searchField} || '%'	
				</when>
			</choose>
		</if>
		<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchCdList1)" >	<!-- 결재구분 -->
			AND A.APRV_TYPE_CD = UPPER(#{searchCdList1})
		</if>
		<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchCdList2)" >	<!-- 확인유무 -->
			AND (F.CONF_YN = #{searchCdList2} OR G.CONF_YN = #{searchCdList2} ) 
		</if>
		<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchCdList3)" >	<!-- 결재상태 -->
			AND E.APRV_YN_TP = #{searchCdList3} 
		</if>
		ORDER BY E.SORT_ORDR DESC, A.CRTN_DT DESC
<!-- 		           A.CRTN_DT DESC, A.TERM_ST_YM ASC, TO_NUMBER(A.APRV_NO) ASC -->
	</select>
	
	
	
	
	
	
	
		<!-- 결재정보 상세조회 -->
	<resultMap id="getAppPaymentView" type="egovframework.rte.psl.dataaccess.util.EgovMap">
	    <result property="aprvNo"		column="APRV_NO"			javaType="java.lang.Integer"	jdbcType="INTEGER" />
	    <result property="reptAprvNo"	column="REPT_APRV_NO"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="reptAprvNm"	column="REPT_APRV_NM"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="aprvTypeCd"	column="APRV_TYPE_CD"		javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="title"		column="TITLE"				javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="projCd"		column="PROC_CD"			javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="termStYm"		column="TERM_ST_YM"			javaType="java.lang.String"		jdbcType="VARCHAR" />
	    <result property="termEdYm"		column="TERM_ED_YM"			javaType="java.lang.String"		jdbcType="VARCHAR" />
		<result property="reptCont"		column="REPT_CONT"			javaType="java.lang.String"		jdbcType="VARCHAR" />
		<result property="aprvLineCd"	column="APRV_LINE_CD"		javaType="java.lang.String"		jdbcType="VARCHAR" />
		<result property="confType"		column="CONF_TYPE"			javaType="java.lang.String"		jdbcType="VARCHAR" />
		<result property="dpNm"			column="DP_NM"				javaType="java.lang.String"		jdbcType="VARCHAR" />
	</resultMap>
	<select id="getSelectAppPaymentView" resultMap="getAppPaymentView" parameterType="map" >
		WITH VW_LINE_CNT AS (
			
			/* 진행 상태 정보 가져오기 */
		  SELECT
		    APRV_NO
		    , CASE
		        WHEN TOT_CNT = APRV_YN_0 THEN '0'
		        WHEN TOT_CNT = APRV_YN_1 THEN '1'
		        WHEN APRV_YN_2 > 0 THEN '2'
		        WHEN APRV_YN_3 > 0 THEN '3'
		        ELSE '9'
		      END APRV_LINE_CD
		  FROM (
		    SELECT 
		      A.APRV_NO
		      , SUM(TOT_CNT) As TOT_CNT
		      , SUM(APRV_YN_0) AS APRV_YN_0		/* 대기 */
		      , SUM(APRV_YN_1) AS APRV_YN_1		/* 완료 */
		      , SUM(APRV_YN_2) AS APRV_YN_2		/* 보류 */
		      , SUM(APRV_YN_3) AS APRV_YN_3		/* 반려 */
		    FROM (
              SELECT 
                APRV_NO
                , COUNT(1) AS TOT_CNT
                , CASE
                    WHEN APRV_YN_CD = 0 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_0        /* 대기 */
                , CASE
                    WHEN APRV_YN_CD = 1 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_1        /* 완료 */
                , CASE
                    WHEN APRV_YN_CD = 2 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_2        /* 보류 */
                , CASE
                    WHEN APRV_YN_CD = 3 AND NVL(REFE_YN, 'N') = 'N' THEN COUNT(1)
                    ELSE 0
                 END APRV_YN_3        /* 반려 */
              FROM STD_APRV_LINE 
              WHERE NVL(REFE_YN, 'N') = 'N'
              GROUP BY APRV_NO, APRV_YN_CD ,NVL(REFE_YN, 'N')
		    ) A
		    GROUP BY A.APRV_NO
		  )
		)
        , VW_ORGNZT AS (
            SELECT USS.USS_ID
                 , DP.DP_NM
              FROM STD_USS_MNG USS
                      LEFT OUTER JOIN (
                          SELECT 
                            CD AS DP_CD, LTRIM (SYS_CONNECT_BY_PATH (CD_NM, ' > '), ' > ') AS DP_NM
                        FROM STD_CD_MNG
                          START WITH UP_CD = 'CD0008'
                          CONNECT BY PRIOR CD = UP_CD
                        ORDER SIBLINGS BY CD_ORD ASC
                    ) DP ON DP.DP_CD = USS.DP_CD
        ) 		
		, VW_CONF_Y AS (
			SELECT
				APRV_NO
				, CASE
					WHEN CONF_TOT = CONF_N THEN 'N'
					ELSE 'Y'
				END CONF_TYPE
			FROM (
				SELECT
					APRV_NO
					, SUM(CONF_TOT) AS CONF_TOT
					, SUM(CONF_N) AS CONF_N
				FROM (
					SELECT
						APRV_NO
						, COUNT(1) AS CONF_TOT
						, CASE
							WHEN CONF_YN = 'N' THEN COUNT(1)
							ELSE 0
						END CONF_N
					FROM
						STD_APRV_LINE
					WHERE APRV_NO = #{aprv_no}
						AND NVL(REFE_YN, 'N') = 'N'
					GROUP BY APRV_NO, CONF_YN
				)
				GROUP BY APRV_NO
			)
		)
		SELECT A.APRV_NO					/* 결재번호 */
			, A.REPT_APRV_NO				/* 보고자사원번호 */
			, B.USS_NM AS REPT_APRV_NM
			, A.APRV_TYPE_CD				/* 결재구분코드(UP_CD=VarConsts.EAM_MASTER_CODE) */
			, A.APRV_TYPE_DTIL_CD				/* 결재구분상세코드 */
			, A.TITLE					/* 제목 */
			, A.PROJ_CD					/* 프로젝트코드 */
			, A.TERM_ST_YM					/* 기간시작일자 */
			, A.TERM_ED_YM					/* 기간종료일자 */
			, A.REPT_CONT					/* 보고내용 */
			, A.HALF_TYPE_CD				/* 반차구분코드 */
			, A.PLACE					/* 행선지 */
			, NVL(C.APRV_LINE_CD, '0') AS APRV_LINE_CD
			, D.CONF_TYPE					/* 확인 유무 */
			, E.DP_NM 
		FROM STD_APRV_MNG A
			LEFT OUTER JOIN STD_USS_MNG B ON B.USS_ID = A.REPT_APRV_NO
			LEFT OUTER JOIN VW_LINE_CNT C ON C.APRV_NO = A.APRV_NO
			LEFT OUTER JOIN VW_CONF_Y D ON D.APRV_NO = A.APRV_NO
			LEFT OUTER JOIN VW_ORGNZT E ON E.USS_ID = A.REPT_APRV_NO
		WHERE A.APRV_NO = #{aprv_no}
	</select>
	
	
	<!-- 결재라인 상세조회 -->
	<select id="getSelectAppPaymentListView" resultType="egovframework.rte.psl.dataaccess.util.EgovMap" parameterType="map" >
		SELECT
		  A.APRV_NO
		  , A.APRV_EMP_NO
		  , A.APRV_ORDR
		  , A.APRV_YN_CD
		  , A.APRV_CONT
		  , CASE
		  		WHEN A.REFE_YN = 'Y' THEN ''
		  		WHEN A.APRV_YN_CD = '1' THEN '승인'
		  		WHEN A.APRV_YN_CD = '2' THEN '보류'
		  		WHEN A.APRV_YN_CD = '3' THEN '반려'
		  		ELSE '대기'		/* '0' */
		  	END APRV_YN_NM
		  , NVL(A.CONF_YN, 'N') AS CONF_YN
		  , B.USS_NM
		  , NVL(A.REFE_YN, 'N') AS REFE_YN
		FROM STD_APRV_LINE A
			LEFT OUTER JOIN STD_USS_MNG B ON B.USS_ID = A.APRV_EMP_NO
		WHERE A.APRV_NO = #{aprv_no}
		ORDER BY DECODE(A.APRV_ORDR, 0, 99, A.APRV_ORDR) ASC
	</select>
	
	
	
	
	
	
	

	
	
	
	
	
	
</mapper>
