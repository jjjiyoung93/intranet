<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="doc">	
	<select id="getFrogh" parameterType="map" resultType="HashMap">
		SELECT APRV_NO
			 , FROGH_RSN
			 , ADDR
			 , CTTPLC
			 , (SELECT CD_NM 
				  FROM STD_CD_MNG 
				 WHERE CD = (SELECT APRV_TYPE_DTIL_CD
							   FROM STD_APRV_MNG
							  WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR})) AS FROGH_DIV
		  FROM DOC_FROGH
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<select id="getFlexWrkSyst" parameterType="map" resultType="HashMap">
		SELECT APRV_NO
			 , MAIN_BUSI
			 , WRK_HH
			 , RQST_RSN
		  FROM DOC_FLEX_WRK_SYST
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<select id="getEducTrain" parameterType="map" resultType="HashMap">
		SELECT APRV_NO
			 , EDUC_NM
			 , EDUC_PURP_CNTN
			 , EDUC_PLC
			 , EDUC_INST
			 , EDUC_COST
			 , SPMN
			 , RMRK
		  FROM DOC_EDUC_TRAIN
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<select id="getBksBuyAplf" parameterType="map" resultType="HashMap">
		SELECT APRV_NO
			 , BKS_NM
			 , PUCH_PURP
			 , AUTHR_NM
			 , PBCM
			 , PBLT_DD
			 , ISBN
			 , BKS_AMT
			 , BKS_AMT_SUM
			 , PUCH_HOPE_NMVL
			 , PUCH_HOPE_DD
			 , RMRK
		  FROM DOC_BKS_BUY_APLF
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<resultMap id="DOC_PTTN" type="hashMap">
		<result property="APRV_NO" column="APRV_NO" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="PTTN_DIV" column="PTTN_DIV" jdbcType="VARCHAR" javaType="java.lang.String"/>
		<result property="PTTN_CONT" column="PTTN_CONT" jdbcType="CLOB" javaType="java.lang.String"/>
	</resultMap>
	<select id="getPttn" parameterType="map" resultMap="DOC_PTTN">
		SELECT APRV_NO
			 , PTTN_DIV
			 , PTTN_CONT
		  FROM DOC_PTTN
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<select id = "getBztrpAdjs" parameterType="map" resultType="HashMap">
		SELECT APRV_NO
			 , BZTRP_PURP
			 , BZTRP_PER
			 , BZTRP_NIGHT
			 , BZTRP_DAYS
			 , BZTRP_PLC
			 , DPAR_AREA
			 , ARYL_AREA
			 , PLND_AMT
			 , CORP_CRD_USE_AMT
			 , BZTRP_ITEM_SUM
			 , PROVD_AMT
			 , BZTRP_RMRK
		  FROM DOC_BZTRP_ADJS
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<select id = "getBztrpAdjsItem" parameterType="map" resultType="HashMap">
 		SELECT APRV_NO
			 , BZTRP_ITEM_SEQ
			 , BZTRP_ITEM_DIV
			 , (SELECT B.CD_NM FROM STD_CD_MNG B WHERE A.BZTRP_ITEM_DIV = B.CD) AS BZTRP_ITEM_DIV_NM
			 , BZTRP_ITEM_CTNT
			 , BZTRP_ITEM_AMT
			 , BZTRP_ITEM_RMRK
			 , BZTRP_ITEM_ST_PLC
			 , BZTRP_ITEM_ED_PLC
			 , (SELECT B.CD_NM FROM STD_CD_MNG B WHERE A.BZTRP_ITEM_ST_PLC = B.CD) AS BZTRP_ITEM_ST_PLC_NM 
			 , (SELECT B.CD_NM FROM STD_CD_MNG B WHERE A.BZTRP_ITEM_ED_PLC = B.CD) AS BZTRP_ITEM_ED_PLC_NM 
		  FROM DOC_BZTRP_ADJS_ITEM A
		 WHERE APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
		 ORDER BY BZTRP_ITEM_SEQ
	</select>
	
	<insert id="insertFrogh" parameterType="map">
		INSERT INTO DOC_FROGH (
			  APRV_NO
			, FROGH_RSN
			, ADDR
			, CTTPLC
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{frogh_rsn, jdbcType=VARCHAR}
			, #{addr, jdbcType=VARCHAR}
			, #{cttplc, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertFlexWrkSyst" parameterType="map">
		INSERT INTO DOC_FLEX_WRK_SYST (
			  APRV_NO
			, MAIN_BUSI
			, WRK_HH
			, RQST_RSN
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{main_busi, jdbcType=VARCHAR}
			, #{wrk_hh, jdbcType=VARCHAR}
			, #{rqst_rsn, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertEducTrain" parameterType="map">
		INSERT INTO DOC_EDUC_TRAIN (
			  APRV_NO
			, EDUC_NM
			, EDUC_PURP_CNTN
			, EDUC_PLC
			, EDUC_INST
			, EDUC_COST
			, SPMN
			, RMRK
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{educ_nm, jdbcType=VARCHAR}
			, #{educ_purp_cntn, jdbcType=VARCHAR}
			, #{educ_plc, jdbcType=VARCHAR}
			, #{educ_inst, jdbcType=VARCHAR}
			, #{educ_cost, jdbcType=VARCHAR}
			, #{spmn, jdbcType=VARCHAR}
			, #{rmrk, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertBksBuyAplf" parameterType="map">
		INSERT INTO DOC_BKS_BUY_APLF (
			  APRV_NO
			, BKS_NM
			, PUCH_PURP
			, AUTHR_NM
			, PBCM
			, PBLT_DD
			, ISBN
			, BKS_AMT
			, BKS_AMT_SUM
			, PUCH_HOPE_NMVL
			, PUCH_HOPE_DD
			, RMRK
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{bks_nm, jdbcType=VARCHAR}
			, #{puch_purp, jdbcType=VARCHAR}
			, #{authr_nm, jdbcType=VARCHAR}
			, #{pbcm, jdbcType=VARCHAR}
			, #{pblt_dd, jdbcType=VARCHAR}
			, #{isbn, jdbcType=VARCHAR}
			, replace(replace(#{bks_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			, replace(replace(#{bks_amt_sum, jdbcType=NUMERIC}, '원', ''), ',', '')
			, replace(replace(#{puch_hope_nmvl, jdbcType=NUMERIC}, '권', ''), ',', '')
			, #{puch_hope_dd, jdbcType=VARCHAR}
			, #{rmrk, jdbcType=VARCHAR}
		)
	</insert>
	
	<insert id="insertPttn" parameterType="map">
		INSERT INTO DOC_PTTN (
			  APRV_NO
			, PTTN_DIV
			, PTTN_CONT
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{pttn_div, jdbcType=VARCHAR}
			, #{pttn_cont, jdbcType=CLOB}
		)
	</insert>
	
	<insert id="insertBztrpAdjs" parameterType="map">
		INSERT INTO DOC_BZTRP_ADJS (
			  APRV_NO
			, BZTRP_PURP
			, BZTRP_PER
			, BZTRP_NIGHT
			, BZTRP_DAYS
			, BZTRP_PLC
			, DPAR_AREA
			, ARYL_AREA
			, PLND_AMT
			, CORP_CRD_USE_AMT
			, BZTRP_ITEM_SUM
			, PROVD_AMT
			, BZTRP_RMRK
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{bztrp_purp, jdbcType=VARCHAR}
			, #{bztrp_per, jdbcType=VARCHAR}
			, #{bztrp_night, jdbcType=VARCHAR}
			, #{bztrp_days, jdbcType=VARCHAR}
			, #{bztrp_plc, jdbcType=VARCHAR}
			, #{dpar_area, jdbcType=VARCHAR}
			, #{aryl_area, jdbcType=VARCHAR}
			, replace(replace(#{plnd_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			, replace(replace(#{corp_crd_use_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			, replace(replace(#{bztrp_item_sum, jdbcType=NUMERIC}, '원', ''), ',', '')
			, replace(replace(#{provd_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			, #{bztrp_rmrk, jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertBztrpAdjsItem" parameterType="map">
		INSERT INTO DOC_BZTRP_ADJS_ITEM (
			  APRV_NO
			, BZTRP_ITEM_SEQ
			, BZTRP_ITEM_DIV
			, BZTRP_ITEM_CTNT
			, BZTRP_ITEM_AMT
			, BZTRP_ITEM_RMRK
			, BZTRP_ITEM_ST_PLC
			, BZTRP_ITEM_ED_PLC
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, #{bztrp_item_seq, jdbcType=VARCHAR}
			, #{bztrp_item_div, jdbcType=VARCHAR}
			, #{bztrp_item_ctnt, jdbcType=VARCHAR}
			, replace(replace(#{bztrp_item_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			, #{bztrp_item_rmrk, jdbcType=VARCHAR}
			, #{bztrp_item_st_plc, jdbcType=VARCHAR}
			, #{bztrp_item_ed_plc, jdbcType=VARCHAR}
		)
	</insert>	
	
	<update id="updateFrogh" parameterType="map">
		UPDATE DOC_FROGH
		   SET FROGH_RSN = #{frogh_rsn, jdbcType=VARCHAR}
			 , ADDR      = #{addr, jdbcType=VARCHAR}
			 , CTTPLC    = #{cttplc, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR} 
	</update>
	
	<update id="updateFlexWrkSyst" parameterType="map">
		UPDATE DOC_FLEX_WRK_SYST
		   SET MAIN_BUSI = #{main_busi, jdbcType=VARCHAR}
			 , WRK_HH    = #{wrk_hh, jdbcType=VARCHAR}
			 , RQST_RSN  = #{rqst_rsn, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</update>
	
	<update id="updateEducTrain" parameterType="map">
		UPDATE DOC_EDUC_TRAIN
		   SET EDUC_NM        = #{educ_nm, jdbcType=VARCHAR}
			 , EDUC_PURP_CNTN = #{educ_purp_cntn, jdbcType=VARCHAR}
			 , EDUC_PLC       = #{educ_plc, jdbcType=VARCHAR}
			 , EDUC_INST      = #{educ_inst, jdbcType=VARCHAR}
			 , EDUC_COST      = #{educ_cost, jdbcType=VARCHAR}
			 , SPMN           = #{spmn, jdbcType=VARCHAR}
			 , RMRK           = #{rmrk, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</update>
	
	<update id="updateBksBuyAplf" parameterType="map">
		UPDATE DOC_BKS_BUY_APLF
		   SET BKS_NM         = #{bks_nm, jdbcType=VARCHAR}
			 , PUCH_PURP      = #{puch_purp, jdbcType=VARCHAR}
			 , AUTHR_NM       = #{authr_nm, jdbcType=VARCHAR}
			 , PBCM           = #{pbcm, jdbcType=VARCHAR}
			 , PBLT_DD        = #{pblt_dd, jdbcType=VARCHAR}
			 , ISBN           = #{isbn, jdbcType=VARCHAR}
			 , BKS_AMT        = replace(replace(#{bks_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , BKS_AMT_SUM    = replace(replace(#{bks_amt_sum, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , PUCH_HOPE_NMVL = replace(replace(#{puch_hope_nmvl, jdbcType=NUMERIC}, '권', ''), ',', '')
			 , PUCH_HOPE_DD   = #{puch_hope_dd, jdbcType=VARCHAR}
			 , RMRK           = #{rmrk, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</update>
	
	<update id="updatePttn" parameterType="map">
		UPDATE DOC_PTTN
		   SET PTTN_DIV  = #{pttn_div, jdbcType=VARCHAR}
			 , PTTN_CONT = #{pttn_cont, jdbcType=CLOB}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</update>
	
	<update id="updateBztrpAdjs" parameterType="map">
		UPDATE DOC_BZTRP_ADJS
		   SET BZTRP_PURP       = #{bztrp_purp, jdbcType=VARCHAR}
			 , BZTRP_PER        = #{bztrp_per, jdbcType=VARCHAR}
			 , BZTRP_NIGHT      = #{bztrp_night, jdbcType=VARCHAR}
			 , BZTRP_DAYS       = #{bztrp_days, jdbcType=VARCHAR}
			 , BZTRP_PLC        = #{bztrp_plc, jdbcType=VARCHAR}
			 , DPAR_AREA        = #{dpar_area, jdbcType=VARCHAR}
			 , ARYL_AREA        = #{aryl_area, jdbcType=VARCHAR}
			 , PLND_AMT         = replace(replace(#{plnd_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , CORP_CRD_USE_AMT = replace(replace(#{corp_crd_use_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , BZTRP_ITEM_SUM   = replace(replace(#{bztrp_item_sum, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , PROVD_AMT        = replace(replace(#{provd_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , BZTRP_RMRK       = #{bztrp_rmrk, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</update>

	<update id="updateBztrpAdjsItem" parameterType="map">
		UPDATE DOC_BZTRP_ADJS_ITEM
		   SET BZTRP_ITEM_DIV  = #{bztrp_item_div, jdbcType=VARCHAR}
			 , BZTRP_ITEM_CTNT = #{bztrp_item_ctnt, jdbcType=VARCHAR}
			 , BZTRP_ITEM_AMT  = replace(replace(#{bztrp_item_amt, jdbcType=NUMERIC}, '원', ''), ',', '')
			 , BZTRP_ITEM_RMRK = #{bztrp_item_rmrk, jdbcType=VARCHAR}
			 , BZTRP_ITEM_ST_PLC = #{bztrp_item_st_plc, jdbcType=VARCHAR}
			 , BZTRP_ITEM_ED_PLC = #{bztrp_item_ed_plc, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
		   AND BZTRP_ITEM_SEQ = #{bztrp_item_seq, jdbcType=VARCHAR}
	</update>
		
	<delete id="deleteFrogh" parameterType="map">
		DELETE FROM DOC_FROGH
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR} 
	</delete>
	
	<delete id="deleteFlexWrkSyst" parameterType="map">
		DELETE FROM DOC_FLEX_WRK_SYST
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR} 
	</delete>
	
	<delete id="deleteEducTrain" parameterType="map">
		DELETE FROM DOC_EDUC_TRAIN
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR} 
	</delete>
	
	<delete id="deleteBksBuyAplf" parameterType="map">
		DELETE FROM DOC_BKS_BUY_APLF
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<delete id="deletePttn" parameterType="map">
		DELETE FROM DOC_PTTN
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBztrpAdjs" parameterType="map">
		DELETE FROM DOC_BZTRP_ADJS
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteBztrpAdjsItem" parameterType="map">
		DELETE FROM DOC_BZTRP_ADJS_ITEM
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<!-- 가지급금 CRUD  -->
	<insert id="insertTmpPay" parameterType="map">
		INSERT INTO DOC_TMPPAY (
			  APRV_NO
			, PAY_DT
			, PAY_PRPS
			, PAY_AMT
			, PAY_RMK
			, PAY_ACNT
		) VALUES (
			  #{aprv_no, jdbcType=VARCHAR}
			, TO_DATE(#{pay_dt}, 'YYYY-MM-DD')  
			, #{pay_prps, jdbcType=VARCHAR}
			, #{pay_amt, jdbcType=VARCHAR}
			, #{pay_rmk, jdbcType=VARCHAR}
			, #{pay_acnt, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="updateTmpPay" parameterType="map">
		UPDATE DOC_TMPPAY
		   SET PAY_DT = #{pay_dt, jdbcType=VARCHAR}
		     , PAY_PRPS = #{pay_prps, jdbcType=VARCHAR}
		     , PAY_AMT = #{pay_amt, jdbcType=VARCHAR}
		     , PAY_RMK = #{pay_rmk, jdbcType=VARCHAR}
		     , PAY_ACNT = #{pay_acnt, jdbcType=VARCHAR}
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}    
	</update>
	
	<delete id="deleteTmpPay" parameterType="map">
		DELETE FROM DOC_TMPPAY
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<select id="getTmpPay" parameterType="map" resultType="HashMap">
		SELECT A.APRV_NO
		     , A.PAY_PRPS
		     , A.PAY_AMT
		     , A.PAY_RMK
		     , A.PAY_ACNT
		     , TO_CHAR(A.PAY_DT, 'YYYY-MM-DD') AS PAY_DT
		     , B.CD_NM AS PAY_PRPS_NM
		  FROM DOC_TMPPAY A
		  LEFT OUTER JOIN STD_CD_MNG B ON (B.CD = A.PAY_PRPS)
		 WHERE A.APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
	</select>
	
	<!-- 가지급금 상세 항목 CRUD  -->
	<select id="getTmpPayItem" parameterType="map" resultType="HashMap">
		SELECT A.APRV_NO
		     , A.ITEM_NO
		     , A.CD1
		     , A.CD2
		     , A.CNT
		     , TO_CHAR(A.ST_DT, 'YYYY-MM-DD') AS ST_DT
		     , TO_CHAR(A.ED_DT, 'YYYY-MM-DD') AS ED_DT
		     , A.PRICE
		     , A.AMT
		     , A.RMK1
		     , A.RMK2
		     , A.RMK3
		     , A.RMK4
		     , B.CD_NM AS CD1_NM
		     , C.CD_NM AS CD2_NM
		  FROM DOC_TMPPAY_ITEM A
		  LEFT OUTER JOIN STD_CD_MNG B ON B.CD = A.CD1
		  LEFT OUTER JOIN STD_CD_MNG C ON C.CD = A.CD2
		 WHERE A.APRV_NO = #{APRV_NO, jdbcType=VARCHAR}
		 ORDER BY A.CD1
		       , A.ITEM_NO
	</select>
	
	<insert id="insertTmpPayItem" parameterType="kr.letech.aprv.TmpPayItemVO">
		<selectKey keyProperty="itemNoAdd" resultType="String" order="BEFORE">
			SELECT NVL(MAX(TO_NUMBER(ITEM_NO)),0) +1 as itemNoAdd
			  FROM DOC_TMPPAY_ITEM
		</selectKey>
		MERGE INTO DOC_TMPPAY_ITEM
		USING DUAL
		   ON (
		   	  APRV_NO = #{aprvNo, jdbcType=VARCHAR}
		  AND ITEM_NO = #{itemNo, jdbcType=VARCHAR})
		WHEN MATCHED THEN
			 UPDATE SET
		       CD1 = #{cd1, jdbcType=VARCHAR} 
	         , CD2 = #{cd2, jdbcType=VARCHAR}
	         , CNT = #{cnt, jdbcType=VARCHAR}
	         , ST_DT = TO_DATE(#{stDt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	         , ED_DT = TO_DATE(#{edDt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	         , PRICE = #{price, jdbcType=VARCHAR}
	         , AMT = #{amt, jdbcType=VARCHAR}
	         , RMK1 = #{rmk1, jdbcType=VARCHAR}
	         , RMK2 = #{rmk2, jdbcType=VARCHAR}
	         , RMK3 = #{rmk3, jdbcType=VARCHAR}
	         , RMK4 = #{rmk4, jdbcType=VARCHAR}
	    WHEN NOT MATCHED THEN
	         INSERT VALUES (
			   #{aprvNo, jdbcType=VARCHAR}
			 , #{itemNoAdd, jdbcType=VARCHAR}
			 , #{cd1, jdbcType=VARCHAR}
			 , #{cd2, jdbcType=VARCHAR}
			 , #{cnt, jdbcType=VARCHAR}
			 , TO_DATE(#{stDt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			 , TO_DATE(#{edDt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
			 , #{price, jdbcType=VARCHAR}
			 , #{amt, jdbcType=VARCHAR}
			 , #{rmk1, jdbcType=VARCHAR}
			 , #{rmk2, jdbcType=VARCHAR}
			 , #{rmk3, jdbcType=VARCHAR}
			 , #{rmk4, jdbcType=VARCHAR}
		)
				
	</insert>
	
	<update id="updateTmpPayItem" parameterType="kr.letech.aprv.TmpPayItemVO">
		UPDATE DOC_TMPPAY_ITEM
		   SET CD1 = #{cd1, jdbcType=VARCHAR} 
	         , CD2 = #{cd2, jdbcType=VARCHAR}
	         , CNT = #{cnt, jdbcType=VARCHAR}
	         , ST_DT = TO_DATE(#{st_dt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	         , ED_DT = TO_DATE(#{ed_dt, jdbcType=VARCHAR}, 'YYYY-MM-DD')
	         , PRICE = #{price, jdbcType=VARCHAR}
	         , AMT = #{amt, jdbcType=VARCHAR}
	         , RMK1 = #{rmk1, jdbcType=VARCHAR}
	         , RMK2 = #{rmk2, jdbcType=VARCHAR}
	         , RMK3 = #{rmk3, jdbcType=VARCHAR}
	         , RMK4 = #{rmk4, jdbcType=VARCHAR}
	     WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	       AND ITEM_NO = #{item_no, jdbcType=VARCHAR}    
	</update>
	
	<delete id="deleteTmpPayItem" parameterType="map">
		DELETE FROM DOC_TMPPAY_ITEM
	     WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	     <if test="item_no != null and item_no != ''">
	       AND ITEM_NO = #{item_no, jdbcType=VARCHAR}    	     
	     </if>
	</delete>
	
	
	<!-- 문서 템플릿 가져오기  -->
	<select id="getDocTemplate" parameterType="map" resultType="java.lang.String">
		SELECT TMPLT
		  FROM DOC_TMPLT
		 WHERE CD = #{APRV_TYPE_CD, jdbcType=VARCHAR}
	</select>
	
	
	
</mapper>