<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vctMng">
	
	<!-- 휴가부여일수 총 건수  -->
	<select id="getVctDayTotCount" resultType="int" parameterType="map">
		SELECT
			   COUNT(1) AS cnt
		  FROM STD_USS_MNG A
		<where>
			1=1
			<!-- 입사일 이나 등록일자가 기준년도보다 크거나 같은 직원 조회  -->
			AND ( TO_CHAR(A.REG_DT, 'YYYY') <![CDATA[<=]]> #{searchGubun2} 
			      OR SUBSTR(A.JOIN_DT, 1, 4) <![CDATA[<=]]> #{searchGubun2} ) 
			<!-- AND SUBSTR(A.RTR_DT, 1, 4) >= #{searchGubun2} -->  
			<!-- 재직구분 : 파라미터 값이 존재하면 파라미터 값에 따라 조회, 파라미터 값이 존재하지 않으면 '재직중' 조회  -->
		  	<choose>
		  		<when test='searchGubun3 == "Y"'>
		  			AND A.RTR_YN = #{searchGubun3}
		  		</when>
		  		<otherwise>
		  			AND ( A.RTR_YN IS NULL OR A.RTR_YN != 'Y' )
		  		</otherwise>
		  	</choose>
			<!-- ID/성명 : 키워드 값이 있으면 구분에 따라 조회  -->
			<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
				<choose>
					<when test='searchGubun == "01"' >
				AND A.USS_ID LIKE '%' || #{searchField} || '%'
					</when>
					<when test='searchGubun == "02"' >
				AND A.USS_NM LIKE '%' || #{searchField} || '%'	
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	
	<!-- 휴가부여일수 목록 조회   -->
	<select id="getVctDayList" resultType="hashMap" parameterType="map">
		SELECT
		       A.USS_ID						/*사원ID*/
		     , A.USS_NM						/*사원명*/
		     , A.JOIN_DT					/*입사일*/
		     , A.WORK_YR_CNT				/*근속년수*/
		     , A.RTR_DT						/*퇴사일*/
		     , A.RTR_YN						/*퇴사여부*/
		     , B.VCT_GRNT_DAY				/*휴가부여일수*/
		     , #{searchGubun2} AS STDD_YR	/*기준년도*/
		  FROM STD_USS_MNG A
		  LEFT OUTER JOIN (
		  
		                    SELECT STDD_YR
		                         , USS_ID
		                         , VCT_GRNT_DAY
		                      FROM VCT_DAY_MNG
		                     WHERE STDD_YR = #{searchGubun2}
		                      
		                  ) B ON (B.USS_ID = A.USS_ID)
		                  
		 <where>
		  	1=1
		  	<!-- 입사일 이나 등록일자가 기준년도보다 크거나 같은 직원 조회  -->
		  	AND ( TO_CHAR(A.REG_DT, 'YYYY') <![CDATA[<=]]> #{searchGubun2} 
			      OR SUBSTR(A.JOIN_DT, 1, 4) <![CDATA[<=]]> #{searchGubun2} ) 
			<!-- 퇴사일 이 기준년도 보다 크거나 같은 직원 조회  -->
			<!-- AND SUBSTR(A.RTR_DT, 1, 4) >= #{searchGubun2} -->       
		  	<!-- 재직구분 : 파라미터 값이 존재하면 파라미터 값에 따라 조회, 파라미터 값이 존재하지 않으면 '재직중' 조회  -->
		  	<choose>
		  		<when test='searchGubun3 == "Y"'>
		  			AND A.RTR_YN = #{searchGubun3}
		  		</when>
		  		<otherwise>
		  			AND ( A.RTR_YN IS NULL OR A.RTR_YN != 'Y' )
		  		</otherwise>
		  	</choose>
		  	<!-- ID/성명 : ID/성명 : 키워드 값이 있으면 구분에 따라 조회 -->
			<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
				<choose>
					<when test='searchGubun == "01"' >
				AND A.USS_ID LIKE '%' || #{searchField} || '%'
					</when>
					<when test='searchGubun == "02"' >
				AND A.USS_NM LIKE '%' || #{searchField} || '%'	
					</when>
				</choose>
			</if>
		  </where>
		  
		  ORDER BY A.USS_NM ASC	  
		
	</select>
	
	<!-- 휴가부여일수 등록/수정 : MERGE  -->
	<insert id="mergeVctDay" parameterType="map">
		MERGE INTO VCT_DAY_MNG A
		USING (
			<foreach collection="vctMapList" item="vctMap" separator="UNION">
				SELECT  #{vctMap.stdd_yr} AS STDD_YR
				     ,  #{vctMap.uss_id} AS USS_ID
				     ,  #{vctMap.vct_grnt_day} AS VCT_GRNT_DAY
				  FROM DUAL
			</foreach>
		
		) B
	
		   ON (    A.STDD_YR = B.STDD_YR 
		       AND A.USS_ID = B.USS_ID
		       )
		 WHEN NOT MATCHED THEN
		 INSERT ( STDD_YR
		      ,   USS_ID
		      ,   VCT_GRNT_DAY
		 )
		 VALUES ( B.STDD_YR
		      ,   B.USS_ID
		      ,   B.VCT_GRNT_DAY
		 )
		 WHEN MATCHED THEN
		 UPDATE
		    SET A.VCT_GRNT_DAY = B.VCT_GRNT_DAY       
	</insert>
	
	
	<!-- 휴가현황조회 사용자 총 건수  -->
	<select id="getVctInfTotCount" resultType="int" parameterType="map">
		SELECT
			   COUNT(1) AS cnt
		  FROM STD_USS_MNG A
		<where>
			1=1
			<!-- 입사일 이나 등록일자가 기준년도보다 크거나 같은 직원 조회  -->
			AND ( TO_CHAR(A.REG_DT, 'YYYY') <![CDATA[<=]]> #{searchGubun2} 
			      OR SUBSTR(A.JOIN_DT, 1, 4) <![CDATA[<=]]> #{searchGubun2} )  
			<!-- 재직구분 : 파라미터 값이 존재하면 파라미터 값에 따라 조회, 파라미터 값이 존재하지 않으면 '재직중' 조회  -->
		  	<choose>
		  		<when test='searchGubun3 == "Y"'>
		  			AND A.RTR_YN = #{searchGubun3}
		  		</when>
		  		<otherwise>
		  			AND ( A.RTR_YN IS NULL OR A.RTR_YN != 'Y' )
		  		</otherwise>
		  	</choose>
			<!-- ID/성명 : 키워드 값이 있으면 구분에 따라 조회  -->
			<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
				<choose>
					<when test='searchGubun == "01"' >
				AND A.USS_ID LIKE '%' || #{searchField} || '%'
					</when>
					<when test='searchGubun == "02"' >
				AND A.USS_NM LIKE '%' || #{searchField} || '%'	
					</when>
				</choose>
			</if>
		</where>
	</select>
	
	<!-- 휴가현황조회 사용자 목록 조회   -->
	<select id="getVctInfList" resultType="hashMap" parameterType="map">
		  SELECT
		           A.USS_ID
		         , A.USS_NM
		         , A.JOIN_DT
		         , A.REG_DT
		         , A.RTR_YN
		         , A.RTR_DT
		         , A.WORK_YR_CNT - ( TO_NUMBER(TO_CHAR(SYSDATE, 'YYYY')) - TO_NUMBER(#{searchGubun2}) ) AS WORK_YR_CNT
		         , A.EMP_TYPE
		         , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = A.EMP_TYPE) AS EMP_TYPE_NM
		         , B.APRV_NO
		         , B.PROJ_CD
		         , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = B.PROJ_CD) AS PROJ_NM
		         , B.REPT_DP_CD AS DP_CD
		         , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = B.REPT_DP_CD) AS DP_NM
		         , B.REPT_AUTH_CD  AS AUTH_CD
		         , (SELECT S.AUTHOR_NM FROM STD_AUT_INFO S WHERE S.AUTHOR_CODE = B.REPT_AUTH_CD) AS AUTH_NM
		         , #{searchGubun2} AS STDD_YR
		      FROM STD_USS_MNG A
		      LEFT OUTER JOIN (
		      
		                          SELECT
		                                C.APRV_NO
		                              , C.REPT_APRV_NO
		                              , C.PROJ_CD
		                              , C.REPT_DP_CD
		                              , C.REPT_AUTH_CD
		                           FROM STD_APRV_MNG C
		                           INNER JOIN ( SELECT
		                                              REPT_APRV_NO
		                                            , MAX(TO_NUMBER(APRV_NO)) AS MAX_APRV_NO
		                                        FROM STD_APRV_MNG
		                                        WHERE TO_CHAR(MODI_DT, 'YYYY') = #{searchGubun2}
		                                        GROUP BY REPT_APRV_NO
		                                        ORDER BY MAX(TO_NUMBER(APRV_NO)) DESC ) D ON (C.APRV_NO = D.MAX_APRV_NO) 
		                                        
		                     ) B ON  (A.USS_ID = B.REPT_APRV_NO)
		        <where>
		              1=1
		          AND ( TO_CHAR(A.REG_DT, 'YYYY') <![CDATA[<=]]> #{searchGubun2}
		                OR SUBSTR(A.JOIN_DT, 1, 4)<![CDATA[<=]]> #{searchGubun2} ) /*입사년도*/
		          <!-- 재직구분 : 파라미터 값이 존재하면 파라미터 값에 따라 조회, 파라미터 값이 존재하지 않으면 '재직중' 조회  -->
				  	<choose>
				  		<when test='searchGubun3 == "Y"'>
				  			AND A.RTR_YN = #{searchGubun3}
				  		</when>
				  		<otherwise>
				  			AND ( A.RTR_YN IS NULL OR A.RTR_YN != 'Y' )
				  		</otherwise>
				  	</choose>
				  	<!-- ID/성명 : ID/성명 : 키워드 값이 있으면 구분에 따라 조회 -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
						<choose>
							<when test='searchGubun == "01"' >
						AND A.USS_ID LIKE '%' || #{searchField} || '%'
							</when>
							<when test='searchGubun == "02"' >
						AND A.USS_NM LIKE '%' || #{searchField} || '%'	
							</when>
						</choose>
					</if>
					<!-- 고용구분  -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun4)">
						AND A.EMP_TYPE = #{searchGubun4}
					</if>
					<!-- 직급(권한)  -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun5)">
						AND B.REPT_AUTH_CD = #{searchGubun5}
					</if>
					
					<!-- 프로젝트  -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun6)">
						AND B.PROJ_CD = #{searchGubun6}
					</if>
		        
		        </where> 
		  ORDER BY A.USS_NM ASC	  
		
	</select>
		
	<!-- 휴가 현황 목록 조회  -->
	<select id="getVctViewList" parameterType="map" resultType="hashMap">
		SELECT
		       A.STDD_YR
		     , A.USS_ID
		     , (SELECT S.USS_NM FROM STD_USS_MNG S WHERE S.USS_ID = A.USS_ID) AS USS_UM
		     , C.CD
		     , ( SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = C.CD ) AS VCT_TYPE_NM
		     , CASE WHEN C.CD = 'CD0001011001' THEN A.VCT_GRNT_DAY
		            ELSE NULL
		            END AS VCT_GRNT_DAY /*부여일수*/
		     , NVL(B.VCT_TOT_USE_CNT, 0) AS VCT_TOT_USE_CNT /*사용일*/
		     , CASE WHEN C.CD = 'CD0001011001' THEN (A.VCT_GRNT_DAY - B.VCT_TOT_USE_CNT)
		            ELSE NULL
		            END AS VCT_LEFT_DAY/*잔여일*/
		     , CASE WHEN C.CD = 'CD0001011001' THEN ROUND((B.VCT_TOT_USE_CNT / A.VCT_GRNT_DAY * 100) , 2)
		            ELSE NULL
		            END AS VCT_USE_RATE /*활용률*/
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '01') AS JAN_CNT /*1월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '02') AS FEB_CNT /*2월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '03') AS MAR_CNT /*3월 사용일수 */
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND S.VCT_QRTR = 1) AS FIR_QRTR_CNT /*1분기 사용일수*/
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '04') AS APR_CNT/*4월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '05') AS MAY_CNT/*5월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '06') AS JUN_CNT/*6월 사용일수 */
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND S.VCT_QRTR = 2) AS SEC_QRTR_CNT /*2분기 사용일수*/
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '07') AS JUL_CNT/*7월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '08') AS AUg_CNT/*8월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '09') AS SEP_CNT/*9월 사용일수 */
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND S.VCT_QRTR = 3) AS THR_QRTR_CNT /*3분기 사용일수*/
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '10')AS OCT_CNT/*10월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '11') AS NOV_CNT/*11월 사용일수 */
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND SUBSTR(S.VCT_DT, 6, 2) = '12') AS DEC_CNT/*12월 사용일수 */
		     
		     , (SELECT NVL(SUM(S.VCT_DAY_CNT), 0) FROM VCT_INF_MNG S WHERE S.VCT_YR = A.STDD_YR AND S.USS_ID = A.USS_ID AND S.VCT_TYPE = C.CD AND S.VCT_QRTR = 4) AS FRT_QRTR_CNT /*4분기 사용일수*/
		  FROM ( SELECT * FROM VCT_DAY_MNG WHERE STDD_YR = #{stdd_yr} AND USS_ID = #{uss_id} ) A
		  LEFT OUTER JOIN (SELECT
		                          E.VCT_YR
		                        , E.USS_ID
		                        , E.VCT_TYPE
		                        , SUM(E.VCT_DAY_CNT) AS VCT_TOT_USE_CNT
		                     FROM VCT_INF_MNG E
		                     INNER JOIN (SELECT APRV_NO FROM STD_APRV_MNG WHERE CANCEL_YN IS NULL OR CANCEL_YN != 'Y') F ON (E.APRV_NO = F.APRV_NO)
		                    GROUP BY E.VCT_YR, E.USS_ID, E.VCT_TYPE ) B ON (B.USS_ID = A.USS_ID AND B.VCT_YR = A.STDD_YR)
		  RIGHT OUTER JOIN (SELECT CD FROM STD_CD_MNG WHERE UP_CD = 'CD0001011' ORDER BY CD_ORD) C ON (B.VCT_TYPE = C.CD)                
		
		  ORDER BY C.CD ASC                  
	</select>
	
	<!-- 휴가현황집계 총 갯수  -->
	<select id="getVctStatTotCount" parameterType="map" resultType="int">
		WITH W_PARAMS AS(
	       SELECT #{searchGubun2} AS STDD_YR
	         FROM DUAL
		),W_USS_LIST AS (
		    SELECT
		           B.STDD_YR
		         , A.USS_ID
		         , A.USS_NM
		         , A.EMP_TYPE
		         , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = A.EMP_TYPE) AS EMP_TYPE_NM
		         , A.RTR_YN
		         , DECODE(A.RTR_YN, 'Y', '퇴사', '재직중') AS RTR_YN_NM
		         , A.JOIN_DT
		         , A.RTR_DT
		         , A.WORK_YR_CNT
		         , C.VCT_GRNT_DAY
		      FROM STD_USS_MNG A
		      LEFT OUTER JOIN W_PARAMS B ON (1=1)
		      LEFT OUTER JOIN VCT_DAY_MNG C ON (A.USS_ID = C.USS_ID AND B.STDD_YR = C.STDD_YR)
		      WHERE 1=1
		         AND ( TO_CHAR(A.REG_DT, 'YYYY')  <![CDATA[<=]]> B.STDD_YR OR SUBSTR(A.JOIN_DT, 1, 4) <![CDATA[<=]]> B.STDD_YR )/*기준년도 이전에 입사한 사원*/
		         <choose>
				  		<when test='searchGubun3 == "Y"'>
				  			AND A.RTR_YN = #{searchGubun3}
				  		</when>
				  		<otherwise>
				  			 AND ( NVL(SUBSTR(A.RTR_DT, 1, 4), '9999') >= B.STDD_YR ) /*현재 재직중인 사원*/
				  		</otherwise>
				  </choose>
				  <!-- 고용구분  -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun4)">
						AND A.EMP_TYPE = #{searchGubun4}
					</if>
				<!-- ID/성명 : ID/성명 : 키워드 값이 있으면 구분에 따라 조회 -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
						<choose>
							<when test='searchGubun == "01"' >
						AND A.USS_ID LIKE '%' || #{searchField} || '%'
							</when>
							<when test='searchGubun == "02"' >
						AND A.USS_NM LIKE '%' || #{searchField} || '%'	
							</when>
						</choose>
					</if>
		),W_LAST_APRV AS (
		        SELECT
		               C.REPT_APRV_NO
		             , MAX(TO_NUMBER(C.APRV_NO)) AS MAX_APRV_NO
		         FROM STD_APRV_MNG C
		         LEFT OUTER JOIN W_PARAMS D ON (1=1)
		        WHERE TO_CHAR(C.CRTN_DT, 'YYYY') = D.STDD_YR
		        GROUP BY C.REPT_APRV_NO
		),W_USS_ADD_INFO AS(
		    SELECT
		            E.APRV_NO
		          , E.REPT_APRV_NO
		          , E.PROJ_CD
		          , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = E.PROJ_CD) AS PROJ_NM
		          , E.REPT_DP_CD
		          , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = E.REPT_DP_CD) AS REPT_DP_NM
		          , E.REPT_AUTH_CD
		          , (SELECT S.AUTHOR_NM FROM STD_AUT_INFO S WHERE S.AUTHOR_CODE = E.REPT_AUTH_CD) AS REPT_AUTH_NM
		    FROM STD_APRV_MNG E
		    INNER JOIN W_LAST_APRV F ON (E.APRV_NO = F.MAX_APRV_NO )
		   
		),W_VCT_TYPE_LIST AS (
		    SELECT 
		           * 
		      FROM STD_CD_MNG 
		     WHERE UP_CD = 'CD0001011' 
		     ORDER BY CD_ORD
		), W_VCT_SUM_DAY AS (
		        SELECT 
		               G.USS_ID
		             , G.VCT_TYPE
		             , SUM(G.VCT_DAY_CNT) AS VCT_USE_DAY
		           FROM VCT_INF_MNG G
		           LEFT OUTER JOIN W_PARAMS H ON (1=1)
		           INNER JOIN (SELECT APRV_NO FROM STD_APRV_MNG WHERE CANCEL_YN IS NULL OR CANCEL_YN != 'Y') I ON (G.APRV_NO = I.APRV_NO)
		          WHERE G.VCT_YR = H.STDD_YR
		           GROUP BY G.USS_ID, G.VCT_TYPE 
		), W_VCT_USE_DAY_CNT AS (
		
		SELECT
		           J.STDD_YR
		         , J.USS_ID
		         , J.USS_NM
		         , J.EMP_TYPE
		         , J.EMP_TYPE_NM
		         , J.RTR_YN
		         , J.RTR_YN_NM
		         , J.JOIN_DT
		         , J.RTR_DT
		         , J.WORK_YR_CNT
		         , J.VCT_GRNT_DAY
		         , K.CD AS VCT_TYPE
		         , K.CD_NM AS VCT_TYPE_NM
		         , K.CD_ORD
		         , NVL(I.VCT_USE_DAY, 0) AS VCT_USE_DAY
		         , J.VCT_GRNT_DAY - NVL(I.VCT_USE_DAY, 0) AS VCT_LEFT_DAY
		         , NVL(I.VCT_USE_DAY / J.VCT_GRNT_DAY * 100, 0) AS VCT_USE_RATE
		  FROM W_USS_LIST J
		  LEFT OUTER JOIN W_VCT_TYPE_LIST K ON (1=1)
		  LEFT OUTER JOIN W_VCT_SUM_DAY I ON (I.USS_ID = J.USS_ID AND K.CD = I.VCT_TYPE)
		  ORDER BY J.USS_NM, K.CD_ORD
		
		), W_VCT_USS_INFO AS(
		    SELECT
		           L.STDD_YR
		         , L.USS_ID
		         , L.USS_NM
		         , L.EMP_TYPE
		         , L.EMP_TYPE_NM
		         , L.RTR_YN
		         , L.RTR_YN_NM
		         , L.JOIN_DT
		         , L.RTR_DT
		         , NVL(L.WORK_YR_CNT, 0) AS WORK_YR_CNT
		         , NVL(L.VCT_GRNT_DAY, 0) AS VCT_GRNT_DAY
		         , M.PROJ_CD
		         , M.PROJ_NM
		         , M.REPT_DP_CD
		         , M.REPT_DP_NM
		         , M.REPT_AUTH_CD
		         , M.REPT_AUTH_NM 
		      
		      FROM W_USS_LIST L
		      LEFT OUTER JOIN W_USS_ADD_INFO M ON (M.REPT_APRV_NO = L.USS_ID)
		      <where>
			      1=1
			    <if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun5)">
			      AND M.REPT_AUTH_CD = #{searchGubun5}	
			    </if>
			    <if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun6)">
			      AND M.PROJ_CD = #{searchGubun6}	
			    </if>
		      </where>
		)
			SELECT
			      COUNT(1) AS cnt
			  FROM W_VCT_USS_INFO
		    
	</select>
	
	
	<!-- 휴가현황집계 목록 조회  -->
	<select id="getVctStatList" resultType="hashMap" parameterType="map">
		WITH W_PARAMS AS(
	       SELECT #{searchGubun2} AS STDD_YR
	         FROM DUAL
		),W_USS_LIST AS (
		    SELECT
		           B.STDD_YR
		         , A.USS_ID
		         , A.USS_NM
		         , A.EMP_TYPE
		         , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = A.EMP_TYPE) AS EMP_TYPE_NM
		         , A.RTR_YN
		         , DECODE(A.RTR_YN, 'Y', '퇴사', '재직중') AS RTR_YN_NM
		         , A.JOIN_DT
		         , A.RTR_DT
		         , A.WORK_YR_CNT
		         , C.VCT_GRNT_DAY
		      FROM STD_USS_MNG A
		      LEFT OUTER JOIN W_PARAMS B ON (1=1)
		      LEFT OUTER JOIN VCT_DAY_MNG C ON (A.USS_ID = C.USS_ID AND B.STDD_YR = C.STDD_YR)
		      WHERE 1=1
		         AND ( TO_CHAR(A.REG_DT, 'YYYY')  <![CDATA[<=]]> B.STDD_YR OR SUBSTR(A.JOIN_DT, 1, 4) <![CDATA[<=]]> B.STDD_YR )/*기준년도 이전에 입사한 사원*/
		         <choose>
				  		<when test='searchGubun3 == "Y"'>
				  			AND A.RTR_YN = #{searchGubun3}
				  		</when>
				  		<otherwise>
				  			 AND ( NVL(SUBSTR(A.RTR_DT, 1, 4), '9999') >= B.STDD_YR ) /*현재 재직중인 사원*/
				  		</otherwise>
				  </choose>
				  <!-- 고용구분  -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun4)">
						AND A.EMP_TYPE = #{searchGubun4}
					</if>
				<!-- ID/성명 : ID/성명 : 키워드 값이 있으면 구분에 따라 조회 -->
					<if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchField)" >
						<choose>
							<when test='searchGubun == "01"' >
						AND A.USS_ID LIKE '%' || #{searchField} || '%'
							</when>
							<when test='searchGubun == "02"' >
						AND A.USS_NM LIKE '%' || #{searchField} || '%'	
							</when>
						</choose>
					</if>
		),W_LAST_APRV AS (
		        SELECT
		               C.REPT_APRV_NO
		             , MAX(TO_NUMBER(C.APRV_NO)) AS MAX_APRV_NO
		         FROM STD_APRV_MNG C
		         LEFT OUTER JOIN W_PARAMS D ON (1=1)
		        WHERE TO_CHAR(C.CRTN_DT, 'YYYY') = D.STDD_YR
		        GROUP BY C.REPT_APRV_NO
		),W_USS_ADD_INFO AS(
		    SELECT
		            E.APRV_NO
		          , E.REPT_APRV_NO
		          , E.PROJ_CD
		          , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = E.PROJ_CD) AS PROJ_NM
		          , E.REPT_DP_CD
		          , (SELECT S.CD_NM FROM STD_CD_MNG S WHERE S.CD = E.REPT_DP_CD) AS REPT_DP_NM
		          , E.REPT_AUTH_CD
		          , (SELECT S.AUTHOR_NM FROM STD_AUT_INFO S WHERE S.AUTHOR_CODE = E.REPT_AUTH_CD) AS REPT_AUTH_NM
		    FROM STD_APRV_MNG E
		    INNER JOIN W_LAST_APRV F ON (E.APRV_NO = F.MAX_APRV_NO )
		    
		),W_VCT_TYPE_LIST AS (
		    SELECT 
		           * 
		      FROM STD_CD_MNG 
		     WHERE UP_CD = 'CD0001011' 
		     ORDER BY CD_ORD
		), W_VCT_SUM_DAY AS (
		        SELECT 
		               G.USS_ID
		             , G.VCT_TYPE
		             , SUM(G.VCT_DAY_CNT) AS VCT_USE_DAY
		           FROM VCT_INF_MNG G
		           LEFT OUTER JOIN W_PARAMS H ON (1=1)
		           INNER JOIN (SELECT APRV_NO FROM STD_APRV_MNG WHERE CANCEL_YN IS NULL OR CANCEL_YN != 'Y') I ON (G.APRV_NO = I.APRV_NO)
		          WHERE G.VCT_YR = H.STDD_YR
		           GROUP BY G.USS_ID, G.VCT_TYPE 
		), W_VCT_USE_DAY_CNT AS (
		
		SELECT
		           J.STDD_YR
		         , J.USS_ID
		         , J.USS_NM
		         , J.EMP_TYPE
		         , J.EMP_TYPE_NM
		         , J.RTR_YN
		         , J.RTR_YN_NM
		         , J.JOIN_DT
		         , J.RTR_DT
		         , J.WORK_YR_CNT
		         , J.VCT_GRNT_DAY
		         , K.CD AS VCT_TYPE
		         , K.CD_NM AS VCT_TYPE_NM
		         , K.CD_ORD
		         , NVL(I.VCT_USE_DAY, 0) AS VCT_USE_DAY
		         , J.VCT_GRNT_DAY - NVL(I.VCT_USE_DAY, 0) AS VCT_LEFT_DAY
		         , NVL(I.VCT_USE_DAY / J.VCT_GRNT_DAY * 100, 0) AS VCT_USE_RATE
		  FROM W_USS_LIST J
		  LEFT OUTER JOIN W_VCT_TYPE_LIST K ON (1=1)
		  LEFT OUTER JOIN W_VCT_SUM_DAY I ON (I.USS_ID = J.USS_ID AND K.CD = I.VCT_TYPE)
		  ORDER BY J.USS_NM, K.CD_ORD
		
		), W_VCT_USS_INFO AS(
		    SELECT
		           L.STDD_YR
		         , L.USS_ID
		         , L.USS_NM
		         , L.EMP_TYPE
		         , L.EMP_TYPE_NM
		         , L.RTR_YN
		         , L.RTR_YN_NM
		         , L.JOIN_DT
		         , L.RTR_DT
		         , NVL(L.WORK_YR_CNT, 0) AS WORK_YR_CNT
		         , NVL(L.VCT_GRNT_DAY, 0) AS VCT_GRNT_DAY
		         , M.PROJ_CD
		         , M.PROJ_NM
		         , M.REPT_DP_CD
		         , M.REPT_DP_NM
		         , M.REPT_AUTH_CD
		         , M.REPT_AUTH_NM 
		      
		      FROM W_USS_LIST L
		      LEFT OUTER JOIN W_USS_ADD_INFO M ON (M.REPT_APRV_NO = L.USS_ID)
		)
			SELECT
		           X.STDD_YR
		         , X.USS_ID
		         , X.USS_NM
		         , X.EMP_TYPE
		         , X.EMP_TYPE_NM
		         , X.RTR_YN
		         , X.RTR_YN_NM
		         , X.JOIN_DT
		         , X.RTR_DT
		         , X.WORK_YR_CNT
		         , X.PROJ_CD
		         , X.PROJ_NM
		         , X.REPT_DP_CD
		         , X.REPT_DP_NM
		         , X.REPT_AUTH_CD
		         , X.REPT_AUTH_NM
		         , X.VCT_GRNT_DAY AS YEON_GRNT_DAY
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011001') AS YEON_USE_CNT
		         , (SELECT NVL(S.VCT_LEFT_DAY, 0) FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011001') AS YEON_LEFT_CNT
		         , (SELECT ROUND(S.VCT_USE_RATE, 2) FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011001') AS YEON_USE_RATE
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011002') AS DISS_USE_CNT
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011003') AS FAM_EVNT_USE_CNT
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011004') AS REPLC_USE_CNT
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011005') AS CMFT_USE_CNT
		         , (SELECT S.VCT_USE_DAY FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID AND S.VCT_TYPE = 'CD0001011006') AS FAM_CARE_USE_CNT
		         ,(SELECT NVL(SUM(S.VCT_USE_DAY), 0) FROM W_VCT_USE_DAY_CNT S WHERE S.USS_ID = X.USS_ID) AS VCT_TOT_CNT
		      FROM W_VCT_USS_INFO X
		      <where>
		          1=1
			     <if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun5)">
			      AND X.REPT_AUTH_CD = #{searchGubun5}	
			    </if>
			    <if test="@kr.letech.cmm.util.DBSupport@isNotEmpty(searchGubun6)">
			      AND X.PROJ_CD = #{searchGubun6}	
			    </if>
		      </where> 
		      ORDER BY X.USS_NM
	
	</select>
	
	<!-- 휴가정보 등록  -->
	<insert id="insertVctInf" parameterType="map">
		INSERT INTO VCT_INF_MNG (
			   USS_ID
             , VCT_DT
             , APRV_NO
             , VCT_TYPE
             , VCT_TRM_TYPE
             , VCT_QRTR	
             , VCT_YR
             , PROJ_CD
             , VCT_DAY_CNT
             , EMP_TYPE
             , RTR_YN
             , AUT_CD
             , CRTN_DT
             , MODI_DT
		)
		VALUES(
			   #{uss_id, jdbcType=VARCHAR}
             , #{vct_dt, jdbcType=VARCHAR}
             , #{aprv_no, jdbcType=VARCHAR}
             , #{vct_type, jdbcType=VARCHAR}
             , #{vct_trm_type, jdbcType=VARCHAR }
             , TO_NUMBER(#{vct_qrtr, jdbcType=VARCHAR})
             , #{vct_yr, jdbcType=VARCHAR}
             , #{proj_cd, jdbcType=VARCHAR}
             , TO_NUMBER(#{vct_day_cnt, jdbcType=VARCHAR})
             , #{emp_type, jdbcType=VARCHAR}
             , #{rtr_yn}
             , #{aut_cd, jdbcType=VARCHAR}
             , SYSDATE
             , SYSDATE			
		
		)
		
	</insert>
	
	<!-- 휴가정보 삭제  -->
	<delete id="deleteVctInf" parameterType="map">
		DELETE
		  FROM VCT_INF_MNG
		 WHERE APRV_NO = #{aprv_no, jdbcType=VARCHAR}
	</delete>
	
	<!-- 로그인한 사용자의 남은 잔여일 수 가져오기  -->
	<select id="getUssVctInfo" parameterType="map" resultType="hashMap">
		SELECT
		       A.USS_ID /*사원ID*/
		     , A.USS_NM /*사원명*/
		     , B.VCT_GRNT_DAY /*휴가부여일수*/
		     , C.VCT_DAY_CNT /*연차사용일수*/
		     , NVL(B.VCT_GRNT_DAY, 0) - NVL(C.VCT_DAY_CNT, 0) AS VCT_LEFT_DAY /*잔여연차일수*/
		       
		  FROM (SELECT * FROM STD_USS_MNG WHERE USS_ID = #{uss_id}) A
		  LEFT OUTER JOIN (SELECT * FROM VCT_DAY_MNG WHERE STDD_YR = #{stdd_yr} AND USS_ID = #{uss_id}) B ON (A.USS_ID = B.USS_ID)
		  LEFT OUTER JOIN (SELECT
		                          G.VCT_YR
		                        , G.USS_ID
		                        , SUM(G.VCT_DAY_CNT) AS VCT_DAY_CNT
		                     FROM VCT_INF_MNG G
		                     INNER JOIN (SELECT APRV_NO FROM STD_APRV_MNG WHERE CANCEL_YN IS NULL OR CANCEL_YN != 'Y') I ON (G.APRV_NO = I.APRV_NO)
		                    WHERE G.VCT_YR = #{stdd_yr}
		                      AND G.USS_ID = #{uss_id}
		                      AND G.VCT_TYPE = 'CD0001011001'
		                    GROUP BY G.VCT_YR, G.USS_ID) C ON (C.USS_ID = A.USS_ID)
	</select>
</mapper>
